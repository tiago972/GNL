1] la structure:
fd
buffer
nombre de ligne totale
index de la dernière ligne lue
nombre d'appel de la fonction pour ce fd
return var +/-

2] quand la fonction est appelée
	va regarder si le fd est non connu
		A] fd non connue
		1) initialisation à 0 des variables de la struct
		2) création de la liste si inexistante puis
			création du pointeur sur structure correspondant
			ajout du pointeur à la liste
		3) lecture du fichier dans le buf
		4) settage du nombre de lignes totales
		5) settage le nombre d'appel de la fonction à 1
		6) récupération de l'index correspondant au premier backslash n
			et le mettre dans la variable appropriée
		7) création de *ligne par strsub

	B] si fd est connue
		1) ++ le nombre de d'appel à la fonction
		2) comparer au nombre de lignes totales, si > cf 3
		3) récupération de l'index correspondant au backslash n
			et le mettre dans la variable appropriée
		4) création de *ligne par strsub

	C] Pour la lecture
		1) temp de la taille de BUFF_SIZE
		2) *tmp2 = strjoin(*buff, *temp)
		3) strdel(buff);
		4) *buf = strdup(tmp2)
		5) strdel(tmp2);

3] A la fin de la fonction
comparer le nombre de ligne lue et le nombre d'appels à la fonction
	Si < setter return à 1
	Si == seter return à 1 et : vider les élements de la liste + 
		 free le pointeur la structure
	Si > setter return à 0 et +/- *ligne = NULL (a voir si ca peut le
		 faire tout seul)

4] Fonctions nécessaires
	1)	fonction get_next_line
	2)	fonction read;
	3)	fonction pour la struct: savoir si fd connue, 
		sinon initialisation et création pointeur sur liste
	4)	fonction à option  pour compter le nombres de lignes du fichier et pour trouver l'index
	5)	fonction pour free le bordel 
